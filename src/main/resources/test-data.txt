Apache Flink’s unified approach to stream and batch processing means that a DataStream
application executed over bounded input will produce the same final results regardless
of the configured execution mode. It is important to note what final means here: a job
executing in STREAMING mode might produce incremental updates (think upserts in
a database) while in BATCH mode, it would only produce one final result at the end. The
final result will be the same if interpreted correctly, but getting there can be
different.
The “classic” execution behavior of the DataStream API is called STREAMING execution
mode. Applications should use streaming execution for unbounded jobs that require
continuous incremental processing and are expected to stay online indefinitely.
By enabling BATCH execution, we allow Flink to apply additional optimizations that we
can only do when we know that our input is bounded. For example, different
join/aggregation strategies can be used, in addition to a different shuffle
implementation that allows more efficient task scheduling and failure recovery behavior.
By setting the runtime mode to AUTOMATIC, Flink will choose BATCH if all sources
are bounded and otherwise STREAMING.